{
    "2": "The Heap De\ufb01nition A (max) heap is a \u201cnearly complete\u201d binary tree structure storing items in nodes, where every node is greater than or equal to each of its child nodes. (cid:73) The rule for parent/child key values is weaker over the tree as a whole than what we have for red-black trees, 2-3-4 trees or AVL trees (in those cases the tree encodes a total-ordering on the keys in the nodes). (cid:73) But . . . the topology of a heap is more restricted than for those other tree structures - we have a binary tree with leaves appearing at depth h and depth h \u2212 1, and all depth-h leaves grouped together to the left. (cid:73) The heap does not (readily) carry total-order information, but is ideally set-up to e\ufb03ciently answer \u201cmax\u201d questions (suitable for priority queues). (cid:73) Neat structure of the topology means we can store the heap in an array. IADS\u2013 Lecture 11 \u2013 slide 3 "
}